var searchIndex = {};
searchIndex["launchbin"] = {"doc":"","items":[[5,"main","launchbin","The entry point for shims to third-party binary executables.",null,{"inputs":[],"output":null}]],"paths":[]};
searchIndex["launchscript"] = {"doc":"","items":[[5,"main","launchscript","The entry point for shims to third-party scripts.",null,{"inputs":[],"output":null}]],"paths":[]};
searchIndex["node"] = {"doc":"","items":[[5,"main","node","The entry point for the `node` shim.",null,{"inputs":[],"output":null}]],"paths":[]};
searchIndex["node_archive"] = {"doc":"This crate provides types for fetching and unpacking Node distribution archives, which is a tarball for Unixes and a zipfile for Windows.","items":[[3,"HttpError","node_archive","",null,null],[12,"code","","",0,null],[3,"Archive","","A Node installation tarball.",null,null],[12,"archive","","",1,null],[3,"Cached","","A data source for a Node tarball that has been cached to the filesystem.",null,null],[12,"uncompressed_size","","",2,null],[12,"compressed_size","","",2,null],[12,"source","","",2,null],[3,"Remote","","A data source for fetching a Node tarball from a remote server.",null,null],[12,"uncompressed_size","","",3,null],[12,"compressed_size","","",3,null],[12,"source","","",3,null],[0,"source","","Defines a helper macro `define_source_trait!`, for both the `tarball` and `zip` modules to be able to define their own `Source` trait.",null,null],[0,"tarball","","Provides types and functions for fetching and unpacking a Node installation tarball in Unix operating systems.",null,null],[3,"Cached","node_archive::tarball","A data source for a Node tarball that has been cached to the filesystem.",null,null],[12,"uncompressed_size","","",2,null],[12,"compressed_size","","",2,null],[12,"source","","",2,null],[3,"Remote","","A data source for fetching a Node tarball from a remote server.",null,null],[12,"uncompressed_size","","",3,null],[12,"compressed_size","","",3,null],[12,"source","","",3,null],[3,"MissingHeaderError","","",null,null],[12,"header","","",4,null],[3,"Archive","","A Node installation tarball.",null,null],[12,"archive","","",1,null],[3,"UnexpectedContentLengthError","","",null,null],[12,"length","","",5,null],[3,"ByteRangesNotAcceptedError","","",null,null],[5,"content_length","","Determines the length of an HTTP response's content in bytes, using the HTTP `\"Content-Length\"` header.",null,{"inputs":[{"name":"response"}],"output":{"generics":["u64","error"],"name":"result"}}],[5,"headers_only","","Fetches just the headers of a URL.",null,{"inputs":[{"name":"str"}],"output":{"generics":["response","error"],"name":"result"}}],[5,"unpack_isize","","Unpacks the `isize` field from a gzip payload as a 64-bit integer.",null,null],[5,"fetch_isize","","Fetches just the `isize` field (the field that indicates the uncompressed size) of a gzip file from a URL. This makes two round-trips to the server but avoids downloading the entire gzip file. For very small files it's unlikely to be more efficient than simply downloading the entire file up front.",null,{"inputs":[{"name":"str"},{"name":"u64"}],"output":{"generics":["error"],"name":"result"}}],[5,"load_isize","","Loads the `isize` field (the field that indicates the uncompressed size) of a gzip file from disk.",null,{"inputs":[{"name":"file"}],"output":{"generics":["error"],"name":"result"}}],[5,"fetch_uncompressed_size","","Determines the uncompressed size of a gzip file hosted at the specified URL by fetching just the metadata associated with the file. This makes two round-trips to the server, so it is only more efficient than simply downloading the file if the file is large enough that downloading it is slower than the extra round trips.",null,{"inputs":[{"name":"str"}],"output":{"generics":["u64","error"],"name":"result"}}],[5,"load_uncompressed_size","","Determines the uncompressed size of the specified gzip file on disk.",null,{"inputs":[{"name":"file"}],"output":{"generics":["u64","error"],"name":"result"}}],[8,"Source","","A data source for fetching a Node archive. In Unix operating systems, this is required to implement `Read`. In Windows, this trait extends both `Read` and `Seek` so as to be able to traverse the contents of zip archives.",null,null],[10,"uncompressed_size","","Produces the uncompressed size of the archive in bytes, when available. In Windows, this is never available and always produces `None`. In other platforms, this is always available and always produces a `Some` value.",6,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[10,"compressed_size","","Produces the compressed size of the archive in bytes.",6,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"load","node_archive","Loads a cached Node tarball from the specified file.",2,{"inputs":[{"name":"file"}],"output":{"generics":["cached","error"],"name":"result"}}],[11,"read","","",2,null],[11,"uncompressed_size","","",2,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"compressed_size","","",2,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"cause","node_archive::tarball","",4,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",4,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fetch","node_archive","Initiate fetching of a Node tarball from the given URL, returning a `Remote` data source.",3,{"inputs":[{"name":"str"},{"name":"path"}],"output":{"generics":["remote","error"],"name":"result"}}],[11,"read","","",3,null],[11,"uncompressed_size","","",3,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"compressed_size","","",3,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"new","","Constructs a new `Archive` from the specified data source and with the specified progress callback.",1,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"generics":["archive","error"],"name":"result"}}],[11,"unpack","","Unpacks the tarball to the specified destination folder.",1,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"generics":["error"],"name":"result"}}],[11,"cause","node_archive::tarball","",5,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",5,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",7,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[0,"zip","node_archive","Provides types and functions for fetching and unpacking a Node installation zip file in Windows operating systems.",null,null],[3,"Cached","node_archive::zip","A data source for a Node zip archive that has been cached to the filesystem.",null,null],[12,"compressed_size","","",8,null],[12,"source","","",8,null],[3,"Remote","","A data source for fetching a Node zip archive from a remote server.",null,null],[12,"cached","","",9,null],[3,"Archive","","A Node installation zip archive.",null,null],[12,"archive","","",10,null],[8,"Source","","A data source for fetching a Node archive. In Unix operating systems, this is required to implement `Read`. In Windows, this trait extends both `Read` and `Seek` so as to be able to traverse the contents of zip archives.",null,null],[10,"uncompressed_size","","Produces the uncompressed size of the archive in bytes, when available. In Windows, this is never available and always produces `None`. In other platforms, this is always available and always produces a `Some` value.",11,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[10,"compressed_size","","Produces the compressed size of the archive in bytes.",11,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"load","","Loads a cached Node zip archive from the specified file.",8,{"inputs":[{"name":"file"}],"output":{"generics":["cached"],"name":"result"}}],[11,"read","","",8,null],[11,"seek","","",8,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"generics":["u64"],"name":"result"}}],[11,"uncompressed_size","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"compressed_size","","",8,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"fetch","","Initiate fetching of a Node zip archive from the given URL, returning a `Remote` data source.",9,{"inputs":[{"name":"str"},{"name":"path"}],"output":{"generics":["remote","error"],"name":"result"}}],[11,"read","","",9,null],[11,"seek","","",9,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"generics":["u64"],"name":"result"}}],[11,"uncompressed_size","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[11,"compressed_size","","",9,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"new","","Constructs a new `Archive` from the specified data source and with the specified progress callback.",10,{"inputs":[{"name":"s"},{"name":"f"}],"output":{"generics":["archive","error"],"name":"result"}}],[11,"unpack","","Unpacks the zip archive to the specified destination folder.",10,{"inputs":[{"name":"self"},{"name":"path"}],"output":{"generics":["error"],"name":"result"}}],[8,"Source","node_archive","A data source for fetching a Node archive. In Unix operating systems, this is required to implement `Read`. In Windows, this trait extends both `Read` and `Seek` so as to be able to traverse the contents of zip archives.",null,null],[10,"uncompressed_size","","Produces the uncompressed size of the archive in bytes, when available. In Windows, this is never available and always produces `None`. In other platforms, this is always available and always produces a `Some` value.",6,{"inputs":[{"name":"self"}],"output":{"generics":["u64"],"name":"option"}}],[10,"compressed_size","","Produces the compressed size of the archive in bytes.",6,{"inputs":[{"name":"self"}],"output":{"name":"u64"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"HttpError"],[3,"Archive"],[3,"Cached"],[3,"Remote"],[3,"MissingHeaderError"],[3,"UnexpectedContentLengthError"],[8,"Source"],[3,"ByteRangesNotAcceptedError"],[3,"Cached"],[3,"Remote"],[3,"Archive"],[8,"Source"]]};
searchIndex["notion"] = {"doc":"","items":[[3,"Args","notion","",null,null],[12,"arg_command","","",0,null],[12,"arg_args","","",0,null],[12,"flag_version","","",0,null],[12,"flag_verbose","","",0,null],[3,"Notion","","",null,null],[12,"command","","",1,null],[12,"args","","",1,null],[12,"verbose","","",1,null],[5,"main","","The entry point for the `notion` CLI.",null,{"inputs":[],"output":null}],[0,"command","","",null,null],[4,"CommandName","notion::command","Represents the set of Notion command names.",null,null],[13,"Install","","",2,null],[13,"Uninstall","","",2,null],[13,"Use","","",2,null],[13,"Current","","",2,null],[13,"Help","","",2,null],[13,"Version","","",2,null],[0,"install","","",null,null],[3,"Args","notion::command::install","",null,null],[12,"arg_version","","",3,null],[4,"Install","","",null,null],[13,"Help","","",4,null],[13,"Default","","",4,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",3,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"help","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"parse","","",4,{"inputs":[{"name":"notion"},{"name":"args"}],"output":{"name":"fallible"}}],[11,"run","","",4,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[0,"uninstall","notion::command","",null,null],[3,"Args","notion::command::uninstall","",null,null],[12,"arg_version","","",5,null],[4,"Uninstall","","",null,null],[13,"Help","","",6,null],[13,"Default","","",6,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",5,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"help","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"parse","","",6,{"inputs":[{"name":"notion"},{"name":"args"}],"output":{"name":"fallible"}}],[11,"run","","",6,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[0,"current","notion::command","",null,null],[3,"Args","notion::command::current","",null,null],[12,"flag_local","","",7,null],[12,"flag_global","","",7,null],[4,"Current","","",null,null],[13,"Help","","",8,null],[13,"Local","","",8,null],[13,"Global","","",8,null],[13,"All","","",8,null],[5,"local","","",null,{"inputs":[{"name":"session"}],"output":{"generics":["option"],"name":"fallible"}}],[5,"global","","",null,{"inputs":[{"name":"session"}],"output":{"generics":["option"],"name":"fallible"}}],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",7,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"help","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"parse","","",8,{"inputs":[{"name":"notion"},{"name":"args"}],"output":{"generics":["current"],"name":"fallible"}}],[11,"run","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[0,"use_","notion::command","",null,null],[3,"Args","notion::command::use_","",null,null],[12,"arg_version","","",9,null],[12,"flag_global","","",9,null],[4,"Use","","",null,null],[13,"Help","","",10,null],[13,"Global","","",10,null],[13,"Local","","",10,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"help","","",10,{"inputs":[],"output":{"name":"self"}}],[11,"parse","","",10,{"inputs":[{"name":"notion"},{"name":"args"}],"output":{"name":"fallible"}}],[11,"run","","",10,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[0,"help","notion::command","",null,null],[3,"Args","notion::command::help","",null,null],[12,"arg_command","","",11,null],[4,"Help","","",null,null],[13,"Notion","","",12,null],[13,"Command","","",12,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",11,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"help","","",12,{"inputs":[],"output":{"name":"self"}}],[11,"parse","","",12,{"inputs":[{"name":"notion"},{"name":"args"}],"output":{"generics":["help"],"name":"fallible"}}],[11,"run","","",12,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[0,"version","notion::command","",null,null],[3,"Args","notion::command::version","",null,null],[4,"Version","","",null,null],[13,"Help","","",13,null],[13,"Default","","",13,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",14,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"help","","",13,{"inputs":[],"output":{"name":"self"}}],[11,"parse","","",13,{"inputs":[{"name":"notion"},{"name":"args"}],"output":{"generics":["version"],"name":"fallible"}}],[11,"run","","",13,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[17,"_IMPL_DESERIALIZE_FOR_CommandName","notion::command","",null,null],[8,"Command","","A Notion command.",null,null],[16,"Args","","The intermediate type Docopt should deserialize the parsed command into.",15,null],[18,"USAGE","","The full usage documentation for this command. This can contain leading and trailing whitespace, which will be trimmed before printing to the console.",15,null],[10,"help","","Produces a variant of this type representing the `notion <command> --help` option.",15,{"inputs":[],"output":{"name":"self"}}],[10,"parse","","Parses the intermediate deserialized arguments into the full command.",15,null],[10,"run","","Executes the command. Returns `Ok(true)` if the process should return 0, `Ok(false)` if the process should return 1, and `Err(e)` if the process should return `e.exit_code()`.",15,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}],[11,"go","","Top-level convenience method for taking a Notion invocation and executing this command with the arguments taken from the Notion invocation.",15,{"inputs":[{"name":"notion"}],"output":{"generics":["bool"],"name":"fallible"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"commandname"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"error","notion","",null,null],[3,"CliParseError","notion::error","",null,null],[12,"usage","","",16,null],[12,"error","","",16,null],[8,"DocoptExt","","",null,null],[10,"is_help","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"is_version","","",17,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[8,"NotionErrorExt","","",null,null],[10,"usage","","",18,{"inputs":[{"name":"self"}],"output":{"generics":["str"],"name":"option"}}],[11,"cause","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",16,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_docopt","","",16,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"is_user_friendly","","",16,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"exit_code","","",16,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[17,"VERSION","notion","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Args","","",null,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[18,"USAGE","","",1,null],[11,"verbose","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"full_argv","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["string"],"name":"vec"}}],[11,"go","","",1,{"inputs":[],"output":{"generics":["bool"],"name":"fallible"}}],[11,"parse","","",1,{"inputs":[],"output":{"generics":["notion"],"name":"fallible"}}],[11,"run","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["bool"],"name":"fallible"}}]],"paths":[[3,"Args"],[3,"Notion"],[4,"CommandName"],[3,"Args"],[4,"Install"],[3,"Args"],[4,"Uninstall"],[3,"Args"],[4,"Current"],[3,"Args"],[4,"Use"],[3,"Args"],[4,"Help"],[4,"Version"],[3,"Args"],[8,"Command"],[3,"CliParseError"],[8,"DocoptExt"],[8,"NotionErrorExt"]]};
searchIndex["notion_core"] = {"doc":"The main implementation crate for the core of Notion.","items":[[0,"path","notion_core","Provides functions for determining the paths of files and directories in a standard Notion layout.",null,null],[5,"cache_dir","notion_core::path","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_cache_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"archive_extension","","",null,{"inputs":[],"output":{"name":"string"}}],[5,"versions_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_versions_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_version_dir","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_version_bin_dir","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"bin_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"notion_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"shim_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"shim_file","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"launchbin_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"launchscript_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"user_config_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"user_catalog_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"archive_file","","",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[5,"archive_root_dir","","",null,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[0,"unix","","Provides functions for determining the paths of files and directories in a standard Notion layout in Unix-based operating systems.",null,null],[3,"NoHomeEnvVar","notion_core::path::unix","",null,null],[5,"notion_home","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"cache_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_cache_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"archive_extension","","",null,{"inputs":[],"output":{"name":"string"}}],[5,"versions_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_versions_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_version_dir","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_version_bin_dir","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"bin_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"notion_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"shim_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"shim_file","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"launchbin_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"launchscript_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"user_config_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"user_catalog_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[17,"OS","","The OS component of a Node distribution tarball's name.",null,null],[17,"ARCH","","The system architecture component of a Node distribution tarball's name.",null,null],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_user_friendly","","",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"exit_code","","",0,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[0,"windows","notion_core::path","Provides functions for determining the paths of files and directories in a standard Notion layout in Windows operating systems.",null,null],[5,"program_data_root","notion_core::path::windows","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"cache_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_cache_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"archive_extension","","",null,{"inputs":[],"output":{"name":"string"}}],[5,"versions_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_versions_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_version_dir","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"node_version_bin_dir","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"launchbin_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"launchscript_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"program_files_root","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"bin_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"notion_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"shim_dir","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"shim_file","","",null,{"inputs":[{"name":"str"}],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"local_data_root","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"user_config_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[5,"user_catalog_file","","",null,{"inputs":[],"output":{"generics":["pathbuf"],"name":"fallible"}}],[17,"OS","","",null,null],[17,"ARCH","","",null,null],[17,"OS","notion_core::path","The OS component of a Node distribution tarball's name.",null,null],[17,"ARCH","","The system architecture component of a Node distribution tarball's name.",null,null],[0,"env","notion_core","Provides utilities for modifying the environment when a shim calls out to its delegated executable.",null,null],[5,"path_for","notion_core::env","Produces a modified version of the current `PATH` environment variable that will find Node.js executables in the installation directory for the given version of Node instead of in the Notion shim directory.",null,{"inputs":[{"name":"str"}],"output":{"name":"osstring"}}],[0,"config","notion_core","Provides types for working with Notion configuration files.",null,null],[3,"LazyConfig","notion_core::config","Lazily loaded Notion configuration settings.",null,null],[12,"config","","",1,null],[3,"Config","","Notion configuration settings.",null,null],[12,"node","","",2,null],[3,"NodeConfig","","Notion configuration settings relating to the Node executable.",null,null],[12,"resolve","","The plugin for resolving Node versions, if any.",3,null],[12,"ls_remote","","The plugin for listing the set of Node versions available on the remote server, if any.",3,null],[11,"new","","Constructs a new `LazyConfig` (but does not initialize it).",1,{"inputs":[],"output":{"name":"lazyconfig"}}],[11,"get","","Forces the loading of the configuration settings.",1,{"inputs":[{"name":"self"}],"output":{"generics":["config"],"name":"fallible"}}],[11,"current","","Returns the current configuration settings, loaded from the filesystem.",2,{"inputs":[],"output":{"generics":["config"],"name":"fallible"}}],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"tool","notion_core","Traits and types for executing command-line tools.",null,null],[3,"Script","notion_core::tool","Represents a delegated script.",null,null],[12,"0","","",4,null],[3,"Binary","","Represents a delegated binary executable.",null,null],[12,"0","","",5,null],[3,"Node","","Represents a Node executable.",null,null],[12,"0","","",6,null],[3,"NoArg0Error","","",null,null],[3,"NoGlobalError","","",null,null],[5,"command_for","","",null,{"inputs":[{"name":"osstr"},{"name":"argsos"},{"name":"osstr"}],"output":{"name":"command"}}],[5,"arg0","","",null,{"inputs":[{"name":"argsos"}],"output":{"generics":["osstring"],"name":"fallible"}}],[8,"Tool","","Represents a command-line tool that Notion shims delegate to.",null,null],[11,"launch","","",7,null],[10,"new","","Constructs a new instance.",7,{"inputs":[],"output":{"name":"fallible"}}],[10,"from_components","","Constructs a new instance, using the specified command-line and `PATH` variable.",7,{"inputs":[{"name":"osstr"},{"name":"argsos"},{"name":"osstr"}],"output":{"name":"self"}}],[10,"command","","Extracts the `Command` from this tool.",7,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[11,"exec","","Delegates the current process to this tool.",7,null],[11,"new","","",4,{"inputs":[],"output":{"name":"fallible"}}],[11,"from_components","","",4,{"inputs":[{"name":"osstr"},{"name":"argsos"},{"name":"osstr"}],"output":{"name":"self"}}],[11,"command","","",4,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[11,"new","","",5,{"inputs":[],"output":{"name":"fallible"}}],[11,"from_components","","",5,{"inputs":[{"name":"osstr"},{"name":"argsos"},{"name":"osstr"}],"output":{"name":"self"}}],[11,"command","","",5,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[11,"cause","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",8,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",8,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",9,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",9,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"is_user_friendly","","",9,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"exit_code","","",9,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"new","","",6,{"inputs":[],"output":{"name":"fallible"}}],[11,"from_components","","",6,{"inputs":[{"name":"osstr"},{"name":"argsos"},{"name":"osstr"}],"output":{"name":"self"}}],[11,"command","","",6,{"inputs":[{"name":"self"}],"output":{"name":"command"}}],[0,"project","notion_core","Provides the `Project` type, which represents a Node project tree in the filesystem.",null,null],[3,"Project","notion_core::project","A Node project tree in the filesystem.",null,null],[12,"manifest","","",10,null],[5,"is_node_root","","",null,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[5,"is_node_modules","","",null,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[5,"is_dependency","","",null,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[5,"is_project_root","","",null,{"inputs":[{"name":"path"}],"output":{"name":"bool"}}],[11,"for_current_dir","","Returns the Node project containing the current working directory, if any.",10,{"inputs":[],"output":{"generics":["option"],"name":"fallible"}}],[11,"manifest","","Returns the project manifest (`package.json`) for this project.",10,{"inputs":[{"name":"self"}],"output":{"name":"manifest"}}],[0,"manifest","notion_core","Provides the `Manifest` type, which represents a Node manifest file (`package.json`).",null,null],[3,"Manifest","notion_core::manifest","A Node manifest file.",null,null],[12,"node","","The requested version of Node, under the `notion.node` key.",11,null],[12,"yarn","","The requested version of Yarn, under the `notion.yarn` key.",11,null],[12,"dependencies","","The `dependencies` section.",11,null],[11,"for_dir","","Loads and parses a Node manifest for the project rooted at the specified path.",11,{"inputs":[{"name":"path"}],"output":{"generics":["option"],"name":"fallible"}}],[0,"catalog","notion_core","Provides types for working with Notion's local catalog, the local repository of available tool versions.",null,null],[3,"LazyCatalog","notion_core::catalog","Lazily loaded tool catalog.",null,null],[12,"catalog","","",12,null],[3,"Catalog","","The catalog of tool versions available locally.",null,null],[12,"node","","",13,null],[3,"NodeCatalog","","The catalog of Node versions available locally.",null,null],[12,"activated","","The currently activated Node version, if any.",14,null],[12,"versions","","",14,null],[3,"NoNodeVersionFoundError","","Thrown when there is no Node version matching a requested semver specifier.",null,null],[12,"matching","","",15,null],[3,"Index","","The index of the public Node server.",null,null],[12,"entries","","",16,null],[3,"VersionData","","The set of available files on the public Node server for a given Node version.",null,null],[12,"files","","",17,null],[17,"PUBLIC_NODE_VERSION_INDEX","","URL of the index of available Node versions on the public Node server.",null,null],[11,"new","","Constructs a new `LazyCatalog`.",12,{"inputs":[],"output":{"name":"lazycatalog"}}],[11,"get","","Forces the loading of the catalog and returns an immutable reference to it.",12,{"inputs":[{"name":"self"}],"output":{"generics":["catalog"],"name":"fallible"}}],[11,"get_mut","","Forces the loading of the catalog and returns a mutable reference to it.",12,{"inputs":[{"name":"self"}],"output":{"generics":["catalog"],"name":"fallible"}}],[11,"current","","Returns the current tool catalog.",13,{"inputs":[],"output":{"generics":["catalog"],"name":"fallible"}}],[11,"to_string","","Returns a pretty-printed TOML representation of the contents of the catalog.",13,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"save","","Saves the contents of the catalog to the user's catalog file.",13,{"inputs":[{"name":"self"}],"output":{"name":"fallible"}}],[11,"activate_node","","Activates a Node version matching the specified semantic versioning requirements.",13,{"inputs":[{"name":"self"},{"name":"versionreq"},{"name":"config"}],"output":{"name":"fallible"}}],[11,"install_node","","Installs a Node version matching the specified semantic versioning requirements.",13,{"inputs":[{"name":"self"},{"name":"versionreq"},{"name":"config"}],"output":{"generics":["installed"],"name":"fallible"}}],[11,"uninstall_node","","Uninstalls a specific Node version from the local catalog.",13,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"fallible"}}],[11,"cause","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",15,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"contains","","Tests whether this Node catalog contains the specified Node version.",14,{"inputs":[{"name":"self"},{"name":"version"}],"output":{"name":"bool"}}],[11,"resolve_remote","","Resolves the specified semantic versioning requirements from a remote distributor.",14,{"inputs":[{"name":"self"},{"name":"versionreq"},{"name":"config"}],"output":{"generics":["installer"],"name":"fallible"}}],[11,"resolve_public","","Resolves the specified semantic versioning requirements from the public distributor (`https://nodejs.org`).",14,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"generics":["installer"],"name":"fallible"}}],[11,"resolve_local","","Resolves the specified semantic versioning requirements from the local catalog.",14,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"generics":["version"],"name":"option"}}],[11,"from_str","","",13,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[0,"session","notion_core","Provides the `Session` type, which represents the user's state during an execution of a Notion tool, including their configuration, their current directory, and the state of the local tool catalog.",null,null],[3,"Session","notion_core::session","Represents the user's state during an execution of a Notion tool. The session encapsulates a number of aspects of the environment in which the tool was invoked, including:     - the current directory     - the Node project tree that contains the current directory (if any)     - the Notion configuration settings     - the catalog of locally-installed Notion tools",null,null],[12,"config","","",18,null],[12,"catalog","","",18,null],[12,"project","","",18,null],[11,"new","","Constructs a new `Session`.",18,{"inputs":[],"output":{"generics":["session"],"name":"fallible"}}],[11,"project","","Produces a reference to the current Node project, if any.",18,{"inputs":[{"name":"self"}],"output":{"generics":["project"],"name":"option"}}],[11,"catalog","","Produces a reference to the current tool catalog.",18,{"inputs":[{"name":"self"}],"output":{"generics":["catalog"],"name":"fallible"}}],[11,"catalog_mut","","Produces a mutable reference to the current tool catalog.",18,{"inputs":[{"name":"self"}],"output":{"generics":["catalog"],"name":"fallible"}}],[11,"config","","Produces a reference to the configuration.",18,{"inputs":[{"name":"self"}],"output":{"generics":["config"],"name":"fallible"}}],[11,"current_node","","Produces the version of Node for the current session. If there is an active project with Notion settings, this will ensure a compatible version of Node is installed before returning. If there is no active project with Notion settings, this produces the global version, which may be `None`.",18,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"fallible"}}],[11,"install_node","","Installs a version of Node matching the specified semantic verisoning requirements.",18,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"generics":["installed"],"name":"fallible"}}],[11,"activate_node","","Activates a version of Node matching the specified semantic versioning requirements.",18,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"name":"fallible"}}],[0,"style","notion_core","The view layer of Notion, with utilities for styling command-line output.",null,null],[4,"Action","notion_core::style","",null,null],[13,"Installing","","",19,null],[5,"display_error","","Displays an error to stderr.",null,{"inputs":[{"name":"e"}],"output":null}],[5,"display_error_prefix","","Displays an error to stderr with a styled `\"error:\"` prefix.",null,{"inputs":[],"output":null}],[5,"display_unknown_error","","Displays a generic message for internal errors to stderr.",null,{"inputs":[],"output":null}],[5,"progress_bar","","Constructs a command-line progress bar with the specified Action enum (e.g., `Action::Installing`), details string (e.g., `\"v1.23.4\"`), and logical length (i.e., the number of logical progress steps in the process being visualized by the progress bar).",null,{"inputs":[{"name":"action"},{"name":"str"},{"name":"u64"}],"output":{"name":"progressbar"}}],[5,"progress_spinner","","Constructs a command-line progress spinner with the specified \"message\" string. The spinner is ticked by default every 20ms.",null,{"inputs":[{"name":"str"}],"output":{"name":"progressbar"}}],[11,"assert_receiver_is_total_eq","","",19,null],[11,"eq","","",19,{"inputs":[{"name":"self"},{"name":"action"}],"output":{"name":"bool"}}],[11,"cmp","","",19,{"inputs":[{"name":"self"},{"name":"action"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"self"},{"name":"action"}],"output":{"generics":["ordering"],"name":"option"}}],[11,"clone","","",19,{"inputs":[{"name":"self"}],"output":{"name":"action"}}],[18,"MAX_WIDTH","","",19,null],[11,"fmt","","",19,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"generics":["error"],"name":"result"}}],[0,"serial","notion_core","Provides utilities for serializing and deserializing file formats.",null,null],[5,"touch","notion_core::serial","",null,{"inputs":[{"name":"path"}],"output":{"generics":["file"],"name":"fallible"}}],[0,"catalog","","",null,null],[3,"Catalog","notion_core::serial::catalog","",null,null],[12,"node","","",20,null],[3,"NodeCatalog","","",null,null],[12,"activated","","",21,null],[12,"versions","","",21,null],[17,"_IMPL_SERIALIZE_FOR_Catalog","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Catalog","","",null,null],[17,"_IMPL_SERIALIZE_FOR_NodeCatalog","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_NodeCatalog","","",null,null],[11,"default","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"into_catalog","","",20,{"inputs":[{"name":"self"}],"output":{"generics":["catalog"],"name":"fallible"}}],[11,"into_node_catalog","","",21,{"inputs":[{"name":"self"}],"output":{"generics":["nodecatalog"],"name":"fallible"}}],[11,"to_serial","notion_core::catalog","",13,{"inputs":[{"name":"self"}],"output":{"name":"catalog"}}],[11,"to_serial","","",14,{"inputs":[{"name":"self"}],"output":{"name":"nodecatalog"}}],[0,"manifest","notion_core::serial","",null,null],[3,"Manifest","notion_core::serial::manifest","",null,null],[12,"name","","",22,null],[12,"version","","",22,null],[12,"description","","",22,null],[12,"author","","",22,null],[12,"dependencies","","",22,null],[12,"dev_dependencies","","",22,null],[12,"notion","","",22,null],[3,"NotionManifest","","",null,null],[12,"node","","",23,null],[12,"yarn","","",23,null],[17,"_IMPL_SERIALIZE_FOR_Manifest","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Manifest","","",null,null],[17,"_IMPL_SERIALIZE_FOR_NotionManifest","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_NotionManifest","","",null,null],[11,"into_manifest","","",22,{"inputs":[{"name":"self"}],"output":{"generics":["option"],"name":"fallible"}}],[0,"config","notion_core::serial","",null,null],[3,"Config","notion_core::serial::config","",null,null],[12,"node","","",24,null],[3,"NodeConfig","","",null,null],[12,"resolve","","",25,null],[12,"ls_remote","","",25,null],[17,"_IMPL_SERIALIZE_FOR_Config","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Config","","",null,null],[17,"_IMPL_SERIALIZE_FOR_NodeConfig","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_NodeConfig","","",null,null],[11,"into_config","","",24,{"inputs":[{"name":"self"}],"output":{"generics":["config"],"name":"fallible"}}],[11,"into_node_config","","",25,{"inputs":[{"name":"self"}],"output":{"generics":["nodeconfig"],"name":"fallible"}}],[0,"plugin","notion_core::serial","",null,null],[3,"Plugin","notion_core::serial::plugin","",null,null],[12,"url","","",26,null],[12,"bin","","",26,null],[3,"BothUrlAndBin","","",null,null],[3,"NeitherUrlNorBin","","",null,null],[3,"ResolveResponse","","",null,null],[12,"version","","",27,null],[12,"url","","",27,null],[12,"stream","","",27,null],[3,"BothUrlAndStream","","",null,null],[3,"NeitherUrlNorStream","","",null,null],[3,"FalseStream","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Plugin","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Plugin","","",null,null],[17,"_IMPL_SERIALIZE_FOR_ResolveResponse","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_ResolveResponse","","",null,null],[11,"cause","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",28,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",28,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",29,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",29,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_plugin","","",26,{"inputs":[{"name":"self"},{"name":"u"},{"name":"b"}],"output":{"name":"fallible"}}],[11,"into_resolve","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["resolve"],"name":"fallible"}}],[11,"into_ls_remote","","",26,{"inputs":[{"name":"self"}],"output":{"generics":["lsremote"],"name":"fallible"}}],[11,"cause","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",30,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",30,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",31,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",31,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",32,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",32,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"into_resolve_response","","",27,{"inputs":[{"name":"self"}],"output":{"generics":["resolveresponse"],"name":"fallible"}}],[0,"index","notion_core::serial","",null,null],[3,"Index","notion_core::serial::index","",null,null],[12,"0","","",33,null],[3,"Entry","","",null,null],[12,"version","","",34,null],[12,"files","","",34,null],[17,"_IMPL_SERIALIZE_FOR_Index","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Index","","",null,null],[17,"_IMPL_SERIALIZE_FOR_Entry","","",null,null],[17,"_IMPL_DESERIALIZE_FOR_Entry","","",null,null],[11,"into_index","","",33,{"inputs":[{"name":"self"}],"output":{"generics":["index"],"name":"fallible"}}],[0,"version","notion_core::serial","",null,null],[5,"parse_requirements","notion_core::serial::version","",null,{"inputs":[{"name":"str"}],"output":{"generics":["versionreq"],"name":"fallible"}}],[0,"plugin","notion_core","Types representing Notion plugins.",null,null],[3,"InvalidCommandError","notion_core::plugin","",null,null],[12,"command","","",35,null],[4,"Resolve","","A Node version resolution plugin.",null,null],[13,"Url","","Resolves a Node version by sending it to a URL and receiving the resolution in the response.",36,null],[13,"Bin","","Resolves a Node version by passing it to an executable and receiving the resolution in the process's stdout stream.",36,null],[4,"ResolveResponse","","A response from the Node version resolution plugin.",null,null],[13,"Url","","A plugin response indicating that the Node installer for the resolved version can be downloaded from the specified URL.",37,null],[12,"version","notion_core::plugin::ResolveResponse","",37,null],[12,"url","","",37,null],[13,"Stream","notion_core::plugin","A plugin response indicating that the Node installer for the resolved version is being delivered via the stderr stream of the plugin process.",37,null],[12,"version","notion_core::plugin::ResolveResponse","",37,null],[4,"LsRemote","notion_core::plugin","A plugin listing the available versions of Node.",null,null],[13,"Url","","",38,null],[13,"Bin","","",38,null],[11,"cause","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",35,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",35,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"resolve","","Performs resolution of a Node version based on the given semantic versioning requirements.",36,{"inputs":[{"name":"self"},{"name":"versionreq"}],"output":{"generics":["installer"],"name":"fallible"}}],[11,"fmt","","",37,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from_reader","","Reads and parses a response from a Node version resolution plugin.",37,{"inputs":[{"name":"r"}],"output":{"name":"fallible"}}],[0,"installer","notion_core","Provides types for installing tools into the Notion catalog.",null,null],[4,"Installed","notion_core::installer","The result of a requested installation.",null,null],[13,"Already","","Indicates that the given tool was already installed.",39,null],[13,"Now","","Indicates that the given tool was not already installed but has now been installed.",39,null],[0,"node","","Provides the `Installer` type, which represents a provisioned Node installer.",null,null],[3,"Installer","notion_core::installer::node","A provisioned Node installer.",null,null],[12,"source","","",40,null],[12,"version","","",40,null],[17,"PUBLIC_NODE_SERVER_ROOT","","",null,null],[11,"public","","Provision an `Installer` from the public Node distributor (`https://nodejs.org`).",40,{"inputs":[{"name":"version"}],"output":{"name":"fallible"}}],[11,"remote","","Provision an `Installer` from a remote distributor.",40,{"inputs":[{"name":"version"},{"name":"str"}],"output":{"name":"fallible"}}],[11,"cached","","Provision an `Installer` from the filesystem.",40,{"inputs":[{"name":"version"},{"name":"file"}],"output":{"name":"fallible"}}],[11,"version","","Produces a reference to this installer's Node version.",40,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"install","","Installs this version of Node. (It is left to the responsibility of the `NodeCatalog` to update its state after installation succeeds.)",40,{"inputs":[{"name":"self"},{"name":"nodecatalog"}],"output":{"generics":["installed"],"name":"fallible"}}],[11,"into_version","notion_core::installer","Consumes this value and produces the installed version.",39,{"inputs":[{"name":"self"}],"output":{"name":"version"}}],[11,"version","","Produces a reference to the installed version.",39,{"inputs":[{"name":"self"}],"output":{"name":"version"}}]],"paths":[[3,"NoHomeEnvVar"],[3,"LazyConfig"],[3,"Config"],[3,"NodeConfig"],[3,"Script"],[3,"Binary"],[3,"Node"],[8,"Tool"],[3,"NoArg0Error"],[3,"NoGlobalError"],[3,"Project"],[3,"Manifest"],[3,"LazyCatalog"],[3,"Catalog"],[3,"NodeCatalog"],[3,"NoNodeVersionFoundError"],[3,"Index"],[3,"VersionData"],[3,"Session"],[4,"Action"],[3,"Catalog"],[3,"NodeCatalog"],[3,"Manifest"],[3,"NotionManifest"],[3,"Config"],[3,"NodeConfig"],[3,"Plugin"],[3,"ResolveResponse"],[3,"BothUrlAndBin"],[3,"NeitherUrlNorBin"],[3,"BothUrlAndStream"],[3,"NeitherUrlNorStream"],[3,"FalseStream"],[3,"Index"],[3,"Entry"],[3,"InvalidCommandError"],[4,"Resolve"],[4,"ResolveResponse"],[4,"LsRemote"],[4,"Installed"],[3,"Installer"]]};
searchIndex["notion_fail"] = {"doc":"This crate provides a protocol for Notion's error handling, including a subtrait of the `failure` crate's `Fail` trait to manage the distinction between user-facing and internal error messages, as well as the interface between errors and process exit codes.","items":[[3,"NotionError","notion_fail","The `NotionError` type, which can contain any Notion failure.",null,null],[12,"error","","The underlying error.",0,null],[12,"user_friendly","","The result of `error.is_user_friendly()`.",0,null],[12,"exit_code","","The result of `error.exit_code()`.",0,null],[3,"UnknownNotionError","","A wrapper type for unknown errors.",null,null],[12,"error","","",1,null],[6,"Fallible","","A convenient shorthand for `Result` types that produce `NotionError`s.",null,null],[8,"NotionFail","","The failure trait for all Notion errors.",null,null],[10,"is_user_friendly","","Indicates whether this error has a message suitable for reporting to an end-user.",2,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[10,"exit_code","","Returns the process exit code that should be returned if the process exits with this error.",2,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[8,"FailExt","","An extension trait allowing any failure, including failures from external libraries, to be converted to a Notion error. This marks the error as an unknown error, i.e. a non-user-friendly error.",null,null],[10,"unknown","","",3,{"inputs":[{"name":"self"}],"output":{"name":"notionerror"}}],[10,"with_context","","",3,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"name":"notionerror"}}],[8,"ResultExt","","An extension trait for `Result` values, allowing conversion of third-party errors or other lower-layer errors into Notion errors.",null,null],[10,"unknown","","Convert any error-producing result into a `NotionError`-producing result.",4,{"inputs":[{"name":"self"}],"output":{"generics":["notionerror"],"name":"result"}}],[10,"with_context","","Wrap any error-producing result in a higher-layer error-producing result, pushing the lower-layer error onto the cause chain.",4,{"inputs":[{"name":"self"},{"name":"f"}],"output":{"generics":["notionerror"],"name":"result"}}],[11,"cause","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",0,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"as_fail","","Returns a reference to the underlying failure of this error.",0,{"inputs":[{"name":"self"}],"output":{"name":"fail"}}],[11,"backtrace","","Gets a reference to the `Backtrace` for this error.",0,{"inputs":[{"name":"self"}],"output":{"name":"backtrace"}}],[11,"downcast_ref","","Attempts to downcast this error to a particular `NotionFail` type by reference.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"downcast_mut","","Attempts to downcast this error to a particular `NotionFail` type by mutable reference.",0,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"is_user_friendly","","Indicates whether this error has a message suitable for reporting to an end-user.",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"exit_code","","Returns the process exit code that should be returned if the process exits with this error.",0,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"cause","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["fail"],"name":"option"}}],[11,"backtrace","","",1,{"inputs":[{"name":"self"}],"output":{"generics":["backtrace"],"name":"option"}}],[11,"is_user_friendly","","",1,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"exit_code","","",1,{"inputs":[{"name":"self"}],"output":{"name":"i32"}}],[14,"throw","","A temporary polyfill for `throw!` until the new `failure` library includes it.",null,null]],"paths":[[3,"NotionError"],[3,"UnknownNotionError"],[8,"NotionFail"],[8,"FailExt"],[8,"ResultExt"]]};
searchIndex["progress_read"] = {"doc":"This crate provides an adapter for the `std::io::Read` trait to allow reporting incremental progress to a callback function.","items":[[3,"ProgressRead","progress_read","A reader that reports incremental progress while reading.",null,null],[12,"source","","",0,null],[12,"accumulator","","",0,null],[12,"progress","","",0,null],[11,"read","","Read some bytes from the underlying reader into the specified buffer, and report progress to the progress callback. The progress callback is passed the current value of the accumulator as its first argument and the number of bytes read as its second argument. The result of the progress callback is stored as the updated value of the accumulator, to be passed to the next invocation of the callback.",0,null],[11,"new","","Construct a new progress reader with the specified underlying reader, initial value for an accumulator, and progress callback.",0,{"inputs":[{"name":"r"},{"name":"t"},{"name":"f"}],"output":{"name":"progressread"}}],[11,"seek","","",0,{"inputs":[{"name":"self"},{"name":"seekfrom"}],"output":{"generics":["u64"],"name":"result"}}]],"paths":[[3,"ProgressRead"]]};
initSearch(searchIndex);
